name: PHP (Unit Tests)

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: pcb
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Copy environment
        run:  cp .env.ci .env

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer dependencies
        run: composer install --no-interaction --no-scripts

      - name: NPM install
        run: npm ci

      - name: NPM build
        run: npm run prod

      - name: Generate key
        run: php artisan key:generate

      - name: Set directory permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Prepare database
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: pcb
          DB_USER: root
          DB_PASS: root
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: php artisan migrate

      - name: Larastan
        run: ./vendor/bin/phpstan analyse --memory-limit=1G

      - name: PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: php artisan test --parallel --recreate-databases --coverage-clover tests/coverage/clover.xml --testsuite=UnitAndFeature

      - name: Upload coverage
        run: curl -s https://codecov.io/bash | bash -f
