name: PHP (Unit Tests)

on: push

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          docker run --rm \
            -u "$(id -u):$(id -g)" \
            -v $(pwd):/var/www/html \
            -w /var/www/html \
            laravelsail/php81-composer:latest \
            composer validate && composer install --ignore-platform-reqs --no-interaction --no-scripts

      - name: Prepare .env file
        run: cp .env.ci .env

      - name: Build Docker containers
        run: ./vendor/bin/sail up -d

      - name: Get npm cache directory
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: ./vendor/bin/sail npm ci --ignore-scripts

      - name: Build front-end assets
        run: ./vendor/bin/sail npm run prod

      - name: Prepare Laravel
        run: |
          ./vendor/bin/sail php artisan key:generate
          chmod -R 777 storage bootstrap/cache

      - name: Prepare database
        run: ./vendor/bin/sail php artisan migrate

      - name: Larastan
        run: ./vendor/bin/sail bin phpstan analyse

      - name: PHPUnit
        run: ./vendor/bin/sail test --parallel
