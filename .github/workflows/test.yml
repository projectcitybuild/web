name: PHP (Unit Tests)

on: push

jobs:
  unit-test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_ROOT_PASSWORD: default
          MYSQL_DATABASE: default
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Get Composer cache directory
        id: get-composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore Composer cache
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-v2-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --ignore-platform-reqs --no-interaction

      - name: Prepare .env file
        run: cp .env.ci .env

      - name: Get npm cache directory
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build front-end assets
        run: npm run prod

      - name: Prepare Laravel
        run: |
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache

      - name: Prepare database
        run: php artisan migrate

      - name: Larastan
        run: ./vendor/bin/phpstan analyse

      - name: PHPUnit
        run: php artisan test --parallel
